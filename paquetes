#!/usr/bin/env bash
# Made by Sinfallas <sinfallas@yahoo.com>
# Licence: GPL-2
LC_ALL=C
IFS=" "
trap "rm -f /run/$(basename $0).pid; exit" 0 1 2 3 15
echo "$BASHPID" > /run/$(basename $0).pid
exec 2>/var/log/$(basename $0).log

if ! [[ -f $(pwd)/AUTHORS ]]; then
	echo "No existe el archivo AUTHORS"
	exit 1
else
	echo "El archivo AUTHORS existe"
fi

if ! [[ -f $(pwd)/COPYING ]]; then
	echo "No existe el archivo COPYING"
	exit 1
else
	echo "El archivo COPYING existe"
fi

if ! [[ -d $(pwd)/debian ]]; then
	echo "No existe el directorio debian"
	exit 1
else
	echo "El directorio debian existe"
fi

if ! [[ -f $(pwd)/debian/changelog ]]; then
	echo "No existe el archivo debian/changelog"
	exit 1
else
	echo "El archivo debian/changelog existe"
fi

if ! [[ -f $(pwd)/debian/compat ]]; then
	echo "No existe el archivo debian/compat"
	exit 1
else
	echo "El archivo debian/compat existe"
fi

if ! [[ -f $(pwd)/debian/conffiles ]]; then
	echo "No existe el archivo debian/conffiles"
	exit 1
else
	echo "El archivo debian/conffiles existe"
fi

if ! [[ -f $(pwd)/debian/control ]]; then
	echo "No existe el archivo debian/control"
	exit 1
else
	echo "El archivo debian/control existe"
fi

if ! [[ -f $(pwd)/debian/copyright ]]; then
	echo "No existe el archivo debian/copyright"
	exit 1
else
	echo "El archivo debian/copyright existe"
fi

if ! [[ -f $(pwd)/debian/install ]]; then
	echo "No existe el archivo debian/install"
	exit 1
else
	echo "El archivo debian/install existe"
fi

if ! [[ -f $(pwd)/debian/md5sums ]]; then
	echo "No existe el archivo debian/md5sums"
	exit 1
else
	echo "El archivo debian/md5sums existe"
fi

if ! [[ -f $(pwd)/debian/postinst ]]; then
	echo "No existe el archivo debian/postinst"
	exit 1
else
	echo "El archivo debian/postinst existe"
fi

if ! [[ -f $(pwd)/debian/postrm ]]; then
	echo "No existe el archivo debian/postrm"
	exit 1
else
	echo "El archivo debian/postrm existe"
fi

if ! [[ -f $(pwd)/debian/preinst ]]; then
	echo "No existe el archivo debian/preinst"
	exit 1
else
	echo "El archivo debian/preinst existe"
fi

if ! [[ -f $(pwd)/debian/prerm ]]; then
	echo "No existe el archivo debian/prerm"
	exit 1
else
	echo "El archivo debian/prerm existe"
fi

if ! [[ -f $(pwd)/debian/rules ]]; then
	echo "No existe el archivo debian/rules"
	exit 1
else
	echo "El archivo debian/rules existe"
fi

















if ! [[ -d $(pwd)/debian/source ]]; then

fi

if ! [[ -z $(lscpu | grep GenuineIntel) ]]; then

fi


if ! [[ -f $(pwd)/AUTHORS ]]; then
	echo "No existe el archivo AUTHORS"
	exit 1
fi

if ! [[ -f $(pwd)/COPYING ]]; then
	echo "No existe el archivo COPYING"
	exit 1
fi



* Verificar que el archivo **control** en el directorio **debian** de cada paquete contenga todos los campos necesarios: Source, Section, Priority, Maintainer, Build-Depends, Standards-Version, Homepage, Vcs-Bzr, Package, Architecture, Depends, Description.
* Verificar que el campo **Build-Depends** del archivo **control** contenga el valor: **debhelper**, **cdbs**
* Verificar que el campo **Architecture** del archivo **control** contenga el valor: **all**
* Verificar que el paquete no contenga dependencias que vayan en contra de las [directrices de software libre](https://xanadulinux.wordpress.com/contrato-social/) (paquetes non-free) (la excepción a esta clausula son los paquetes de drivers)
* Verificar que la lista de dependencias finalice con las siguientes variables: **${misc:Depends}**, **${shlibs:Depends}**, **${perl:Depends}**
* Verificar que las dependencias no entren en conflicto con algún otro paquete del grupo de construcción.
* Verificar que la descripción del paquete este en español.
* Verificar que en el directorio **debian** exista el subdirectorio: **source** y que contenga el archivo: **format**
* Verificar que los archivos: **changelog**, **control**, **copyright**, **COPYING** hagan referencia al nombre del paquete que corresponden
* Verificar que los archivos: **postinst**, **postrm**, **preinst**, **prerm** contengan las funciones correspondientes a cada fase de dpkg.
* Verificar que el archivo: **compat** tenga el valor **9**
* Verificar que los archivos **install**, **md5sums** contengan la lista de todos los archivos a instalar
* Verificar que el archivo: **conffiles** contenga la lista de todos los archivos de configuración dentro del paquete.
* Verificar que el archivo: **rules** tenga el mismo contenido que el paquete de ejemplo publicado en [git](https://github.com/sinfallas/package-examples).
* Verificar que los archivos a instalar no estén dentro de ningún directorio
* Para evitar errores en el archivo: **postinst** en la fase **configure)** se debe dar permiso de ejecución a los script que sean instalados.
* Verificar que las dependencias del paquete tengan versiones para las arquitecturas **I386**, **AMD64** y **ARM** (A pesar que de la arquitectura I386 no tiene soporte oficial se mantiene como legacy)



echo " El paquete supero todos las pruebas exitosamente."
rm -f /run/$(basename $0).pid
exit 0
